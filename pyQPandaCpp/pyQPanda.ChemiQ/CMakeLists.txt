cmake_minimum_required(VERSION 3.1)
project(pyQPandaChemiQ)

file(GLOB_RECURSE PYQPANDA_CHEMIQ_SRC *.cpp)
pybind11_add_module(${LIB_PYQPANDA_CHEMIQ} SHARED ${PYQPANDA_CHEMIQ_SRC})
set_target_properties(${LIB_PYQPANDA_CHEMIQ}  PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})
target_link_libraries(${LIB_PYQPANDA_CHEMIQ}  PRIVATE ${LIB_QALG})
set(PYCHEMIQ_OUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../pyQPanda/pyqpanda/ChemiQ")

set(PYCHEMIQ_OUT_LIB
        "${PYTHON_MODULE_PREFIX}${LIB_PYQPANDA_CHEMIQ}${PYTHON_MODULE_EXTENSION}")

add_custom_command(OUTPUT ${PYCHEMIQ_OUT_LIB}
   COMMAND ${CMAKE_COMMAND} -E copy ${EXECUTABLE_OUTPUT_PATH}/${PYCHEMIQ_OUT_LIB} ${PYCHEMIQ_OUT_PATH}
 )
add_custom_target(CopyQPandaTaskChemiQ ALL DEPENDS ${PYCHEMIQ_OUT_LIB} ${LIB_PYQPANDA_CHEMIQ})

# generate stub file for IDE intelliSense after target CopyQPandaTaskChemiQ finished
if(PYQPANDA_STUBGEN)
    add_custom_command(TARGET CopyQPandaTaskChemiQ
        POST_BUILD
        COMMAND ${PYTHON_EXECUTABLE} ${PYQPANDA_STUBGEN} -m ${LIB_PYQPANDA_CHEMIQ} -o ${PYCHEMIQ_OUT_PATH}
        WORKING_DIRECTORY ${EXECUTABLE_OUTPUT_PATH}
        VERBATIM
        USES_TERMINAL
        )
endif(PYQPANDA_STUBGEN)
